"""
Django settings for Taller project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#vht%vl&(0qb(b$$$*(t*hlg4pb8_g%658^d20-8f-pf&m&2y6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.vercel.app', 'localhost','127.0.0.1' ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nutribalance.apps.NutribalanceConfig',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Taller.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Taller.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'nutribalance_db',
        'USER': 'postgres',
        'PASSWORD': 'luani100',
        'HOST': 'database-1.cxya08os4u3t.us-east-2.rds.amazonaws.com',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

#STATIC_URL = '/static/'

#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = "login"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'nutribalanceoficial@gmail.com'
EMAIL_HOST_PASSWORD = 'opwjstrbzctxbzns'    # PASSWORD GENERADA EN GMAIL PARA ESTE CORREO (TENGO QUE HACERLO DESDE LA PROPIA CUENTA QUE PUSE ARRIBA)
EMAIL_USE_TLS = True

MEDIA_URL = '/media/'  # La URL base para acceder a los archivos
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Carpeta donde se guardan físicamente

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

AWS_ACCESS_KEY_ID = 'AKIA34AMCZ6CK4RT3VN7'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'nutribalancebucket'
#AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'us-east-2')  # Código de región (Ohio)
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME#f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"

# Configuraciones adicionales de S3
#AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
#AWS_S3_VERIFY = True

# Parámetros para los archivos en S3
#AWS_S3_OBJECT_PARAMETERS = {
    #'CacheControl': 'max-age=86400',
#}

# Configuración de almacenamiento para archivos estáticos y media
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# URLs para archivos estáticos y media
#STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/static/"
#MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/'

# Define la ruta donde se recopilarán los archivos estáticos
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STORAGES = {
    
    "default": {
        "BACKEND": "storages.backend.s3boto3.S3StaticStorage",
    },
    
    "staticfiles": {
        "BACKEND" : "storages.backends.s3boto3.S3StaticStorage",
    },
    
}


